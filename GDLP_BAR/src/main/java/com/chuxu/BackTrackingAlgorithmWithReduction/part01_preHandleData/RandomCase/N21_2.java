package com.chuxu.BackTrackingAlgorithmWithReduction.part01_preHandleData.RandomCase;

import com.chuxu.entity.Facility;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class N21_2 {
    public static int dimension = 21;
    public static final double[] ci =
            {481.0, 384.0, 618.0, 335.0, 388.0, 237.0, 297.0, 552.0, 994.0, 802.0, 581.0, 548.0, 385.0, 913.0, 257.0, 894.0, 338.0, 998.0, 888.0, 573.0, 173.0};
    public static final double[] pi =
            {569.0, 548.0, 105.0, 706.0, 702.0, 207.0, 856.0, 656.0, 502.0, 557.0, 705.0, 228.0, 340.0, 532.0, 791.0, 147.0, 381.0, 382.0, 333.0, 482.0, 942.0};
    public static final LinkedHashSet<Facility> V = new LinkedHashSet<>();
    public static double[][] disMatrix = {
            {0.00, 81.84, 109.99, 171.50, 195.16, 192.79, 188.82, 145.84, 189.65, 180.24, 181.21, 186.88, 82.16, 188.29, 152.29, 142.04, 186.41, 140.43, 106.88, 118.04, 137.82},
            {81.84, 0.00, 167.22, 197.70, 195.62, 129.44, 154.38, 129.77, 97.86, 174.24, 116.39, 135.14, 122.72, 192.51, 174.62, 82.57, 105.16, 90.48, 105.65, 140.67, 123.33},
            {109.99, 167.22, 0.00, 167.51, 126.26, 131.39, 145.92, 123.75, 196.19, 131.95, 193.89, 198.89, 127.71, 169.20, 100.25, 154.89, 153.46, 119.10, 115.21, 81.50, 199.32},
            {171.50, 197.70, 167.51, 0.00, 177.41, 101.65, 153.56, 138.86, 143.91, 177.35, 182.02, 169.12, 183.38, 185.43, 158.61, 104.31, 130.22, 193.26, 114.58, 154.90, 151.98},
            {195.16, 195.62, 126.26, 177.41, 0.00, 132.97, 139.07, 84.10, 118.54, 142.76, 91.08, 111.80, 178.99, 108.48, 111.34, 128.16, 187.82, 178.83, 176.52, 84.78, 184.49},
            {192.79, 129.44, 131.39, 101.65, 132.97, 0.00, 195.07, 197.85, 90.87, 117.45, 157.61, 149.96, 194.96, 134.11, 86.78, 102.91, 119.85, 192.19, 84.15, 181.52, 139.23},
            {188.82, 154.38, 145.92, 153.56, 139.07, 195.07, 0.00, 166.10, 103.32, 150.96, 198.69, 143.42, 135.33, 165.86, 172.33, 152.28, 164.22, 182.94, 128.07, 89.24, 151.90},
            {145.84, 129.77, 123.75, 138.86, 84.10, 197.85, 166.10, 0.00, 142.70, 170.47, 170.65, 109.16, 196.02, 159.35, 166.67, 81.25, 184.69, 125.92, 157.93, 101.10, 162.33},
            {189.65, 97.86, 196.19, 143.91, 118.54, 90.87, 103.32, 142.70, 0.00, 124.84, 138.87, 122.65, 83.33, 171.62, 159.64, 119.01, 92.04, 99.12, 170.26, 196.64, 153.15},
            {180.24, 174.24, 131.95, 177.35, 142.76, 117.45, 150.96, 170.47, 124.84, 0.00, 185.16, 106.03, 96.93, 116.38, 135.42, 152.57, 190.37, 184.82, 131.18, 111.53, 136.02},
            {181.21, 116.39, 193.89, 182.02, 91.08, 157.61, 198.69, 170.65, 138.87, 185.16, 0.00, 155.90, 131.43, 154.84, 180.58, 87.56, 171.62, 165.95, 126.30, 89.65, 188.74},
            {186.88, 135.14, 198.89, 169.12, 111.80, 149.96, 143.42, 109.16, 122.65, 106.03, 155.90, 0.00, 160.21, 105.84, 151.35, 82.87, 155.18, 184.93, 170.56, 180.01, 162.57},
            {82.16, 122.72, 127.71, 183.38, 178.99, 194.96, 135.33, 196.02, 83.33, 96.93, 131.43, 160.21, 0.00, 189.94, 89.39, 189.10, 99.55, 107.60, 142.57, 148.27, 166.05},
            {188.29, 192.51, 169.20, 185.43, 108.48, 134.11, 165.86, 159.35, 171.62, 116.38, 154.84, 105.84, 189.94, 0.00, 88.03, 131.28, 171.02, 167.61, 139.82, 105.02, 192.45},
            {152.29, 174.62, 100.25, 158.61, 111.34, 86.78, 172.33, 166.67, 159.64, 135.42, 180.58, 151.35, 89.39, 88.03, 0.00, 140.19, 157.24, 147.47, 179.22, 173.52, 124.83},
            {142.04, 82.57, 154.89, 104.31, 128.16, 102.91, 152.28, 81.25, 119.01, 152.57, 87.56, 82.87, 189.10, 131.28, 140.19, 0.00, 199.71, 83.36, 133.98, 123.52, 135.25},
            {186.41, 105.16, 153.46, 130.22, 187.82, 119.85, 164.22, 184.69, 92.04, 190.37, 171.62, 155.18, 99.55, 171.02, 157.24, 199.71, 0.00, 191.39, 95.85, 114.84, 186.02},
            {140.43, 90.48, 119.10, 193.26, 178.83, 192.19, 182.94, 125.92, 99.12, 184.82, 165.95, 184.93, 107.60, 167.61, 147.47, 83.36, 191.39, 0.00, 84.36, 181.42, 166.48},
            {106.88, 105.65, 115.21, 114.58, 176.52, 84.15, 128.07, 157.93, 170.26, 131.18, 126.30, 170.56, 142.57, 139.82, 179.22, 133.98, 95.85, 84.36, 0.00, 147.02, 182.54},
            {118.04, 140.67, 81.50, 154.90, 84.78, 181.52, 89.24, 101.10, 196.64, 111.53, 89.65, 180.01, 148.27, 105.02, 173.52, 123.52, 114.84, 181.42, 147.02, 0.00, 185.85},
            {137.82, 123.33, 199.32, 151.98, 184.49, 139.23, 151.90, 162.33, 153.15, 136.02, 188.74, 162.57, 166.05, 192.45, 124.83, 135.25, 186.02, 166.48, 182.54, 185.85, 0.00},
    };
    public static final double φp = 0.3;  //本例中都取0.2是会得到性质7疯狂降阶的情况，然后通过性质4直接得到了最优解
    public static final double φc = 0.3;
    public static double P;
    public static double C;

    public static void main(String[] args) {
        preHandle();
    }

    public static void preHandle() {
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
        P = Arrays.stream(pi).reduce(0.0, Double::sum) * φp;
        C = Arrays.stream(ci).reduce(0.0, Double::sum) * φc;
        P = Double.parseDouble(decimalFormat.format(P));
        C = Double.parseDouble(decimalFormat.format(C));
        System.out.println("P = " + P);
        System.out.println("C = " + C);
        for (int i = 0; i < pi.length; i++) {
            V.add(new Facility(i + 1, ci[i], pi[i], pi[i] / ci[i]));
        }
    }
}
