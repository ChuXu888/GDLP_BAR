package com.chuxu.BackTrackingAlgorithmWithReduction.part01_preHandleData.RandomCase;

import com.chuxu.entity.Facility;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class N21_4 {
    public static int dimension = 21;
    public static final double[] ci =
            {428.0, 884.0, 793.0, 753.0, 952.0, 542.0, 132.0, 121.0, 395.0, 339.0, 900.0, 204.0, 826.0, 865.0, 852.0, 950.0, 231.0, 457.0, 567.0, 423.0, 866.0};
    public static final double[] pi =
            {619.0, 106.0, 737.0, 874.0, 660.0, 564.0, 242.0, 329.0, 731.0, 589.0, 621.0, 652.0, 313.0, 502.0, 363.0, 318.0, 498.0, 757.0, 875.0, 719.0, 419.0};
    public static final LinkedHashSet<Facility> V = new LinkedHashSet<>();
    public static double[][] disMatrix = {
            {0.00, 178.28, 191.78, 183.09, 84.28, 142.54, 137.72, 158.98, 142.52, 94.94, 92.43, 138.35, 86.93, 163.49, 155.42, 197.93, 186.51, 109.93, 134.16, 137.94, 91.27},
            {178.28, 0.00, 178.86, 117.75, 195.11, 160.91, 189.49, 182.31, 126.19, 126.82, 177.93, 92.80, 179.54, 109.05, 175.61, 155.49, 161.92, 106.20, 80.86, 109.03, 170.81},
            {191.78, 178.86, 0.00, 117.08, 85.76, 199.36, 159.55, 156.67, 159.17, 124.76, 173.36, 197.26, 139.63, 122.07, 118.83, 177.09, 97.96, 133.67, 147.60, 154.33, 149.71},
            {183.09, 117.75, 117.08, 0.00, 147.30, 187.13, 83.34, 191.46, 196.57, 156.97, 193.19, 102.32, 150.00, 168.65, 195.09, 153.81, 100.02, 80.35, 175.58, 185.95, 90.45},
            {84.28, 195.11, 85.76, 147.30, 0.00, 164.73, 166.97, 176.60, 172.27, 108.82, 143.92, 113.50, 192.18, 99.47, 177.10, 134.99, 136.94, 156.18, 80.22, 135.24, 159.03},
            {142.54, 160.91, 199.36, 187.13, 164.73, 0.00, 114.88, 195.79, 194.14, 114.87, 182.32, 137.98, 169.07, 116.99, 129.82, 147.68, 97.61, 114.82, 98.76, 95.16, 105.02},
            {137.72, 189.49, 159.55, 83.34, 166.97, 114.88, 0.00, 116.24, 126.88, 90.03, 89.48, 143.14, 115.44, 166.06, 170.44, 98.73, 121.50, 160.16, 91.93, 93.29, 138.18},
            {158.98, 182.31, 156.67, 191.46, 176.60, 195.79, 116.24, 0.00, 180.15, 152.86, 107.05, 117.43, 195.21, 149.96, 165.24, 95.77, 165.87, 147.02, 179.72, 142.89, 156.91},
            {142.52, 126.19, 159.17, 196.57, 172.27, 194.14, 126.88, 180.15, 0.00, 144.96, 195.65, 106.21, 127.21, 122.92, 128.66, 131.59, 124.53, 168.92, 148.97, 141.02, 191.25},
            {94.94, 126.82, 124.76, 156.97, 108.82, 114.87, 90.03, 152.86, 144.96, 0.00, 81.62, 144.14, 162.71, 88.90, 100.93, 90.06, 197.07, 174.40, 195.34, 82.72, 164.33},
            {92.43, 177.93, 173.36, 193.19, 143.92, 182.32, 89.48, 107.05, 195.65, 81.62, 0.00, 170.48, 197.71, 148.84, 95.02, 165.51, 118.86, 123.66, 134.22, 114.46, 99.87},
            {138.35, 92.80, 197.26, 102.32, 113.50, 137.98, 143.14, 117.43, 106.21, 144.14, 170.48, 0.00, 177.36, 93.63, 153.70, 168.63, 109.28, 162.48, 185.79, 165.69, 149.77},
            {86.93, 179.54, 139.63, 150.00, 192.18, 169.07, 115.44, 195.21, 127.21, 162.71, 197.71, 177.36, 0.00, 179.18, 118.93, 136.54, 194.68, 169.98, 97.25, 194.05, 105.70},
            {163.49, 109.05, 122.07, 168.65, 99.47, 116.99, 166.06, 149.96, 122.92, 88.90, 148.84, 93.63, 179.18, 0.00, 119.13, 113.23, 174.99, 182.40, 147.15, 193.40, 108.24},
            {155.42, 175.61, 118.83, 195.09, 177.10, 129.82, 170.44, 165.24, 128.66, 100.93, 95.02, 153.70, 118.93, 119.13, 0.00, 147.52, 119.41, 130.60, 179.94, 107.34, 146.96},
            {197.93, 155.49, 177.09, 153.81, 134.99, 147.68, 98.73, 95.77, 131.59, 90.06, 165.51, 168.63, 136.54, 113.23, 147.52, 0.00, 143.43, 122.45, 191.86, 154.33, 193.56},
            {186.51, 161.92, 97.96, 100.02, 136.94, 97.61, 121.50, 165.87, 124.53, 197.07, 118.86, 109.28, 194.68, 174.99, 119.41, 143.43, 0.00, 128.67, 107.55, 156.65, 145.86},
            {109.93, 106.20, 133.67, 80.35, 156.18, 114.82, 160.16, 147.02, 168.92, 174.40, 123.66, 162.48, 169.98, 182.40, 130.60, 122.45, 128.67, 0.00, 102.59, 165.94, 148.54},
            {134.16, 80.86, 147.60, 175.58, 80.22, 98.76, 91.93, 179.72, 148.97, 195.34, 134.22, 185.79, 97.25, 147.15, 179.94, 191.86, 107.55, 102.59, 0.00, 154.30, 139.12},
            {137.94, 109.03, 154.33, 185.95, 135.24, 95.16, 93.29, 142.89, 141.02, 82.72, 114.46, 165.69, 194.05, 193.40, 107.34, 154.33, 156.65, 165.94, 154.30, 0.00, 166.27},
            {91.27, 170.81, 149.71, 90.45, 159.03, 105.02, 138.18, 156.91, 191.25, 164.33, 99.87, 149.77, 105.70, 108.24, 146.96, 193.56, 145.86, 148.54, 139.12, 166.27, 0.00},
    };
    public static final double φp = 0.3;  //本例中都取0.2是会得到性质7疯狂降阶的情况，然后通过性质4直接得到了最优解
    public static final double φc = 0.3;
    public static double P;
    public static double C;

    public static void main(String[] args) {
        preHandle();
    }

    public static void preHandle() {
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
        P = Arrays.stream(pi).reduce(0.0, Double::sum) * φp;
        C = Arrays.stream(ci).reduce(0.0, Double::sum) * φc;
        P = Double.parseDouble(decimalFormat.format(P));
        C = Double.parseDouble(decimalFormat.format(C));
        System.out.println("P = " + P);
        System.out.println("C = " + C);
        for (int i = 0; i < pi.length; i++) {
            V.add(new Facility(i + 1, ci[i], pi[i], pi[i] / ci[i]));
        }
    }
}
