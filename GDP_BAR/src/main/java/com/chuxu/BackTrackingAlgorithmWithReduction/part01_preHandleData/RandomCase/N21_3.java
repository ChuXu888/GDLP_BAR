package com.chuxu.BackTrackingAlgorithmWithReduction.part01_preHandleData.RandomCase;

import com.chuxu.entity.Facility;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class N21_3 {
    public static int dimension = 21;
    public static final double[] ci =
            {644.0, 535.0, 147.0, 408.0, 261.0, 694.0, 367.0, 246.0, 869.0, 523.0, 896.0, 917.0, 460.0, 656.0, 658.0, 670.0, 613.0, 526.0, 447.0, 658.0, 307.0};
    public static final double[] pi =
            {465.0, 203.0, 863.0, 743.0, 240.0, 852.0, 382.0, 288.0, 541.0, 583.0, 410.0, 727.0, 288.0, 308.0, 121.0, 101.0, 981.0, 911.0, 342.0, 730.0, 117.0};
    public static final LinkedHashSet<Facility> V = new LinkedHashSet<>();
    public static double[][] disMatrix = {
            {0.00, 87.87, 161.54, 160.55, 152.74, 186.90, 158.84, 118.37, 180.93, 101.74, 111.30, 137.32, 92.12, 150.11, 118.19, 80.78, 154.40, 119.51, 91.63, 84.04, 189.49},
            {87.87, 0.00, 161.11, 161.65, 136.84, 185.61, 108.63, 176.86, 161.85, 198.33, 173.49, 157.59, 110.06, 99.01, 136.23, 109.23, 155.52, 108.02, 176.86, 158.40, 105.83},
            {161.54, 161.11, 0.00, 131.71, 123.12, 93.23, 173.40, 147.38, 105.84, 191.25, 154.18, 130.09, 154.37, 104.27, 156.56, 87.44, 142.68, 179.90, 152.51, 145.84, 188.16},
            {160.55, 161.65, 131.71, 0.00, 172.35, 106.22, 191.54, 150.19, 192.89, 112.64, 114.51, 194.50, 171.18, 88.89, 190.59, 121.80, 163.60, 146.20, 169.52, 105.77, 193.13},
            {152.74, 136.84, 123.12, 172.35, 0.00, 188.14, 131.54, 85.39, 177.79, 132.77, 174.59, 190.56, 100.58, 122.58, 137.03, 87.64, 173.83, 124.83, 87.56, 92.71, 114.07},
            {186.90, 185.61, 93.23, 106.22, 188.14, 0.00, 198.94, 104.16, 195.66, 91.38, 173.87, 158.61, 87.11, 127.71, 139.70, 160.32, 122.45, 93.76, 91.79, 115.73, 94.16},
            {158.84, 108.63, 173.40, 191.54, 131.54, 198.94, 0.00, 152.48, 154.31, 84.13, 153.19, 159.59, 171.83, 120.62, 184.43, 117.56, 133.42, 129.41, 158.76, 169.15, 83.29},
            {118.37, 176.86, 147.38, 150.19, 85.39, 104.16, 152.48, 0.00, 187.67, 95.37, 170.54, 195.12, 80.13, 113.55, 80.90, 144.21, 189.41, 111.69, 126.71, 82.59, 114.36},
            {180.93, 161.85, 105.84, 192.89, 177.79, 195.66, 154.31, 187.67, 0.00, 163.90, 183.70, 86.22, 80.94, 171.23, 107.98, 102.27, 125.11, 124.25, 120.09, 175.85, 126.72},
            {101.74, 198.33, 191.25, 112.64, 132.77, 91.38, 84.13, 95.37, 163.90, 0.00, 87.97, 121.95, 81.82, 176.18, 107.44, 86.23, 106.42, 102.37, 93.87, 81.53, 177.01},
            {111.30, 173.49, 154.18, 114.51, 174.59, 173.87, 153.19, 170.54, 183.70, 87.97, 0.00, 120.75, 186.10, 83.79, 104.84, 194.67, 91.37, 115.57, 186.96, 160.97, 131.63},
            {137.32, 157.59, 130.09, 194.50, 190.56, 158.61, 159.59, 195.12, 86.22, 121.95, 120.75, 0.00, 89.51, 87.44, 112.58, 118.18, 91.07, 186.64, 196.21, 187.68, 197.63},
            {92.12, 110.06, 154.37, 171.18, 100.58, 87.11, 171.83, 80.13, 80.94, 81.82, 186.10, 89.51, 0.00, 169.06, 152.38, 116.04, 177.33, 156.14, 158.23, 144.76, 180.84},
            {150.11, 99.01, 104.27, 88.89, 122.58, 127.71, 120.62, 113.55, 171.23, 176.18, 83.79, 87.44, 169.06, 0.00, 99.77, 189.75, 125.34, 112.52, 155.75, 81.02, 132.68},
            {118.19, 136.23, 156.56, 190.59, 137.03, 139.70, 184.43, 80.90, 107.98, 107.44, 104.84, 112.58, 152.38, 99.77, 0.00, 105.18, 153.12, 161.88, 137.12, 143.25, 106.17},
            {80.78, 109.23, 87.44, 121.80, 87.64, 160.32, 117.56, 144.21, 102.27, 86.23, 194.67, 118.18, 116.04, 189.75, 105.18, 0.00, 123.41, 97.57, 184.32, 140.56, 112.56},
            {154.40, 155.52, 142.68, 163.60, 173.83, 122.45, 133.42, 189.41, 125.11, 106.42, 91.37, 91.07, 177.33, 125.34, 153.12, 123.41, 0.00, 184.29, 157.42, 182.95, 192.30},
            {119.51, 108.02, 179.90, 146.20, 124.83, 93.76, 129.41, 111.69, 124.25, 102.37, 115.57, 186.64, 156.14, 112.52, 161.88, 97.57, 184.29, 0.00, 120.25, 128.66, 95.81},
            {91.63, 176.86, 152.51, 169.52, 87.56, 91.79, 158.76, 126.71, 120.09, 93.87, 186.96, 196.21, 158.23, 155.75, 137.12, 184.32, 157.42, 120.25, 0.00, 183.14, 83.76},
            {84.04, 158.40, 145.84, 105.77, 92.71, 115.73, 169.15, 82.59, 175.85, 81.53, 160.97, 187.68, 144.76, 81.02, 143.25, 140.56, 182.95, 128.66, 183.14, 0.00, 161.02},
            {189.49, 105.83, 188.16, 193.13, 114.07, 94.16, 83.29, 114.36, 126.72, 177.01, 131.63, 197.63, 180.84, 132.68, 106.17, 112.56, 192.30, 95.81, 83.76, 161.02, 0.00},
    };
    public static final double φp = 0.3;  //本例中都取0.2是会得到性质7疯狂降阶的情况，然后通过性质4直接得到了最优解
    public static final double φc = 0.3;
    public static double P;
    public static double C;

    public static void main(String[] args) {
        preHandle();
    }

    public static void preHandle() {
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
        P = Arrays.stream(pi).reduce(0.0, Double::sum) * φp;
        C = Arrays.stream(ci).reduce(0.0, Double::sum) * φc;
        P = Double.parseDouble(decimalFormat.format(P));
        C = Double.parseDouble(decimalFormat.format(C));
        System.out.println("P = " + P);
        System.out.println("C = " + C);
        for (int i = 0; i < pi.length; i++) {
            V.add(new Facility(i + 1, ci[i], pi[i], pi[i] / ci[i]));
        }
    }
}
